{"ast":null,"code":"import { resolveElements } from '../utils/resolve-elements.mjs';\nimport { isDragActive } from './drag/state/is-active.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n  return event => {\n    if (event.pointerType === \"touch\" || isDragActive()) return;\n    callback(event);\n  };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n  const gestureAbortController = new AbortController();\n  const eventOptions = {\n    passive: true,\n    ...options,\n    signal: gestureAbortController.signal\n  };\n  const onPointerEnter = filterEvents(enterEvent => {\n    const {\n      target\n    } = enterEvent;\n    const onHoverEnd = onHoverStart(enterEvent);\n    if (!onHoverEnd || !target) return;\n    const onPointerLeave = filterEvents(leaveEvent => {\n      onHoverEnd(leaveEvent);\n      target.removeEventListener(\"pointerleave\", onPointerLeave);\n    });\n    target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n  });\n  resolveElements(elementOrSelector).forEach(element => {\n    element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n  });\n  return () => gestureAbortController.abort();\n}\nexport { hover };","map":{"version":3,"names":["resolveElements","isDragActive","filterEvents","callback","event","pointerType","hover","elementOrSelector","onHoverStart","options","gestureAbortController","AbortController","eventOptions","passive","signal","onPointerEnter","enterEvent","target","onHoverEnd","onPointerLeave","leaveEvent","removeEventListener","addEventListener","forEach","element","abort"],"sources":["/home/vyoma-pc1/Desktop/my-app/node_modules/motion-dom/dist/es/gestures/hover.mjs"],"sourcesContent":["import { resolveElements } from '../utils/resolve-elements.mjs';\nimport { isDragActive } from './drag/state/is-active.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (!onHoverEnd || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    resolveElements(elementOrSelector).forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return () => gestureAbortController.abort();\n}\n\nexport { hover };\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,+BAA+B;AAC/D,SAASC,YAAY,QAAQ,4BAA4B;;AAEzD;AACA;AACA;AACA;AACA,SAASC,YAAYA,CAACC,QAAQ,EAAE;EAC5B,OAAQC,KAAK,IAAK;IACd,IAAIA,KAAK,CAACC,WAAW,KAAK,OAAO,IAAIJ,YAAY,CAAC,CAAC,EAC/C;IACJE,QAAQ,CAACC,KAAK,CAAC;EACnB,CAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,KAAKA,CAACC,iBAAiB,EAAEC,YAAY,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EAC1D,MAAMC,sBAAsB,GAAG,IAAIC,eAAe,CAAC,CAAC;EACpD,MAAMC,YAAY,GAAG;IACjBC,OAAO,EAAE,IAAI;IACb,GAAGJ,OAAO;IACVK,MAAM,EAAEJ,sBAAsB,CAACI;EACnC,CAAC;EACD,MAAMC,cAAc,GAAGb,YAAY,CAAEc,UAAU,IAAK;IAChD,MAAM;MAAEC;IAAO,CAAC,GAAGD,UAAU;IAC7B,MAAME,UAAU,GAAGV,YAAY,CAACQ,UAAU,CAAC;IAC3C,IAAI,CAACE,UAAU,IAAI,CAACD,MAAM,EACtB;IACJ,MAAME,cAAc,GAAGjB,YAAY,CAAEkB,UAAU,IAAK;MAChDF,UAAU,CAACE,UAAU,CAAC;MACtBH,MAAM,CAACI,mBAAmB,CAAC,cAAc,EAAEF,cAAc,CAAC;IAC9D,CAAC,CAAC;IACFF,MAAM,CAACK,gBAAgB,CAAC,cAAc,EAAEH,cAAc,EAAEP,YAAY,CAAC;EACzE,CAAC,CAAC;EACFZ,eAAe,CAACO,iBAAiB,CAAC,CAACgB,OAAO,CAAEC,OAAO,IAAK;IACpDA,OAAO,CAACF,gBAAgB,CAAC,cAAc,EAAEP,cAAc,EAAEH,YAAY,CAAC;EAC1E,CAAC,CAAC;EACF,OAAO,MAAMF,sBAAsB,CAACe,KAAK,CAAC,CAAC;AAC/C;AAEA,SAASnB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}